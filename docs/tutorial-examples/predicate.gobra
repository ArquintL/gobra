package tutorial

type node struct {
  value int
  next *node
}

pred list(ptr *node) {
  acc(&ptr.value) && acc(&ptr.next) && (ptr.next != nil ==> list(ptr.next))
}

requires list(ptr)
pure func contains(ptr *node, value int) bool {
    return unfolding list(ptr) in ptr.value == value || (ptr.next != nil && contains(ptr.next, value))
}