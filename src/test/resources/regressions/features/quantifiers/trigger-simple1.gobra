// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.
//
// Copyright (c) 2011-2020 ETH Zurich.

package pkg;

type Cell struct {
  val int
}

requires forall x int :: { x } 0 < x 
requires exists x int :: { x } 0 < x 
func example1 () { }

requires forall c Cell :: { c.val } 0 < c.val
requires exists c Cell :: { c.val } 0 < c.val
func example2 () { }

pure func f(ghost n int) int

requires forall x int :: { f(x) } 0 < x 
requires exists x int :: { f(x) } 0 < x 
func example3 () { }

requires forall x int :: { f(f(x)) } 0 < x 
requires exists x int :: { f(f(x)) } 0 < x 
func example4 () { }

pure func g(ghost c Cell) int

requires forall c Cell :: { f(g(c)) } 0 < c.val
requires exists c Cell :: { f(g(c)) } 0 < c.val
func example5 () { }

requires forall c *Cell :: { c } acc(c.val)
func example6 () { }

requires forall c *Cell :: { (*c).val } acc(c.val)
func example7 () { }

