// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.
//
// Copyright (c) 2011-2020 ETH Zurich.

// Signatures for the public declarations in file
// https://github.com/golang/go/blob/master/src/time/zoneinfo.go

package time

type Location struct {
	// name string // TODO
	// zone []zone // Leads to cycle in kiama
	tx   []zoneTrans
	// extend string // TODO
	cacheStart int64
	cacheEnd   int64
	cacheZone  *zone
}

type zone struct {
	// name   string // TODO
	offset int
	isDST  bool
}

type zoneTrans struct {
	when         int64
	index        uint8
	isstd, isutc bool
}

// No support for global variables
// var UTC *Location = &utcLoc
// var Local *Location = &localLoc

// TODO: Transitively requires synchronization through the call to get
// pure func (l *Location) String() string {
// 	return l.get().name
//}

/*
func FixedZone(name string, offset int) *Location {
	l := &Location{
		name:       name,
		zone:       []zone{{name, offset, false}},
		tx:         []zoneTrans{{alpha, 0, false, false}},
		cacheStart: alpha,
		cacheEnd:   omega,
	}
	l.cacheZone = &l.zone[0]
	return l
}
*/

// No support for strings
// func LoadLocation(name string) (*Location, error) 